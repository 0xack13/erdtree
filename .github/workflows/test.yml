name: Test App With Cache

on:
  workflow_dispatch: {}

jobs:
  publish:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            use-cross: false

          - os: ubuntu-20.04
            target: x86_64-unknown-linux-musl
            use-cross: false
          
          - os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
            use-cross: true

          - os: ubuntu-20.04
            target: aarch64-unknown-linux-musl
            use-cross: true

          - os: macos-latest
            target: x86_64-apple-darwin
            use-cross: false

          - os: macos-latest
            target: aarch64-apple-darwin
            use-cross: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Set the version
      id: version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        target: ${{ matrix.target }}
    
    - name: rust cache restore
      uses: actions/cache/restore@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          src-tauri/target/
        key: ${{ runner.os }}-cargo-${{ runner.target }}-${{ hashFiles('**/Cargo.lock') }}


    - name: Build
      uses: actions-rs/cargo@v1
      with:
        use-cross: ${{ matrix.use-cross }}
        command: build
        args: --target ${{ matrix.target }} --release --locked

    - name: Strip binary
      if: matrix.os == 'ubuntu-20.04' || matrix.os == 'macos-latest'
      run: strip target/${{ matrix.target }}/release/et

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/${{ matrix.target }}/release/et
        asset_name: et-${{GITHUB_REF#*/tags/}}-${{ matrix.target }}
        tag: ${{ github.ref }}
    
    - name: rust cache store
      uses: actions/cache/save@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          src-tauri/target/
        key: ${{ runner.os }}-cargo-${{ runner.target }}-${{ hashFiles('**/Cargo.lock') }}
  
  x86_64-pc-windows-msvc:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: false
          target: x86_64-pc-windows-msvc
      
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use-cross }}
          command: build
          args: --release --locked

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/et.exe
          asset_name: et-x86_64-pc-windows-msvc.exe
          tag: ${{ github.ref }}
    